{
	"info": {
		"_postman_id": "6bd547ef-ebe8-4144-bb61-fa0d16942a5d",
		"name": "Home work",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.collectionVariables.set(\"id\", `${id}`)\r",
							"\r",
							"let userName = pm.variables.replaceIn(\"{{$randomUserName}}\")\r",
							"pm.collectionVariables.set(\"userName\", `${userName}`)\r",
							"\r",
							"let firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.collectionVariables.set(\"firstName\", `${firstName}`)\r",
							"\r",
							"let lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.collectionVariables.set(\"lastName\", `${lastName}`)\r",
							"\r",
							"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
							"pm.collectionVariables.set(\"email\", `${email}`)\r",
							"\r",
							"let password = pm.variables.replaceIn(\"{{$randomPassword}}\")\r",
							"pm.collectionVariables.set(\"password\", `${password}`)\r",
							"\r",
							"let phone = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\")\r",
							"pm.collectionVariables.set(\"phone\", `${phone}`)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returned user id is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(pm.collectionVariables.get(\"id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{id}},\r\n  \"username\": \"{{userName}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"userStatus\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/user",
					"host": [
						"{{host}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check created user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returned username is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.username).to.eql(pm.collectionVariables.get(\"userName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned firstName is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql(pm.collectionVariables.get(\"firstName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned lastName is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.lastName).to.eql(pm.collectionVariables.get(\"lastName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned email is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"email\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned password is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.password).to.eql(pm.collectionVariables.get(\"password\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned phone is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.phone).to.eql(pm.collectionVariables.get(\"phone\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned userStatus is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userStatus).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/user/{{userName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let firstName_new = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.collectionVariables.set(\"firstName_new\", `${firstName_new}`)\r",
							"\r",
							"let lastName_new = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.collectionVariables.set(\"lastName_new\", `${lastName_new}`)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returned user id is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(pm.collectionVariables.get(\"id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{id}},\r\n  \"username\": \"{{userName}}\",\r\n  \"firstName\": \"{{firstName_new}}\",\r\n  \"lastName\": \"{{lastName_new}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"userStatus\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/user/{{userName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check updated user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returned username is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.username).to.eql(pm.collectionVariables.get(\"userName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned firstName is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql(pm.collectionVariables.get(\"firstName_new\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned lastName is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.lastName).to.eql(pm.collectionVariables.get(\"lastName_new\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned email is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"email\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned password is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.password).to.eql(pm.collectionVariables.get(\"password\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned phone is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.phone).to.eql(pm.collectionVariables.get(\"phone\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Returned userStatus is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userStatus).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/user/{{userName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returned username is valid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(pm.collectionVariables.get(\"userName\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/user/{{userName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check deleted user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User not exist\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/user/{{userName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{userName}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		},
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "userName",
			"value": ""
		},
		{
			"key": "firstName",
			"value": ""
		},
		{
			"key": "lastName",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "phone",
			"value": ""
		},
		{
			"key": "firstName_new",
			"value": ""
		},
		{
			"key": "lastName_new",
			"value": ""
		}
	]
}